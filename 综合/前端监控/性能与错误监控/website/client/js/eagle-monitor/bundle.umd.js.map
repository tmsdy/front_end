{"version":3,"file":"bundle.umd.js","sources":["../../../../eagle-sdk/errorCatch.js","../../../../eagle-sdk/index.js"],"sourcesContent":["\nlet formatError = (errorObj) => {\n    // console.log(errorObj)\n    let col = errorObj.column || errorObj.columnNumber\n    let row = errorObj.line || errorObj.lineNumber\n    let errorType = errorObj.name\n    let message = errorObj.message\n\n    let {stack} = errorObj\n    if(stack){\n        let matchUrl = stack.match(/https?:\\/\\/[^\\n]+/) //报错url和报错位置\n        // console.log(matchUrl)\n        let urlFirstStack = matchUrl ? matchUrl[0] : ''\n        let regUrlCheck = /https?:\\/\\/(\\S)*\\.js/\n\n        let resourceUrl = '' //报错url\n        if(regUrlCheck.test(urlFirstStack)){\n            resourceUrl = urlFirstStack.match(regUrlCheck)[0]\n            \n        }\n\n        let stackCol = null //报错信息列\n        let stackRow = null //报错信息行\n        let posStack = urlFirstStack.match(/:(\\d+):(\\d+)/)\n        if( posStack && posStack.length>=3 ){\n            [,stackCol,stackRow] = posStack\n        }\n\n        return {\n            content: stack,\n            col: Number(col || stackCol),\n            row: Number(row || stackRow),\n            errorType,\n            message,\n            resourceUrl\n        }\n        // debugger\n    }\n    // debugger\n}\n\nexport default {\n    init: (cb) => {\n        let _origin_error = window.onerror\n        window.onerror = function(message, source, lineno, colno, error) {\n            \n            let errorInfo = formatError(error)\n            errorInfo._message = message\n            errorInfo._source = source\n            errorInfo._lineno = lineno\n            errorInfo._colno = colno\n\n            cb(errorInfo)\n\n            errorInfo.type = 'error'\n            _origin_error && _origin_error.apply(window, arguments)\n            \n        }\n    }\n}","// import perf from './perf'\nimport errorCatch from './errorCatch'\n\n// perf.init(()=>{\n//     console.log('perf init')\n// })\nerrorCatch.init((errorInfo)=>{\n    console.log(errorInfo)\n})\n\nconsole.log('feifei 123')"],"names":[],"mappings":";;;;;IACA,IAAI,WAAW,GAAG,CAAC,QAAQ,KAAK;IAChC;IACA,IAAI,IAAI,GAAG,GAAG,QAAQ,CAAC,MAAM,IAAI,QAAQ,CAAC,aAAY;IACtD,IAAI,IAAI,GAAG,GAAG,QAAQ,CAAC,IAAI,IAAI,QAAQ,CAAC,WAAU;IAClD,IAAI,IAAI,SAAS,GAAG,QAAQ,CAAC,KAAI;IACjC,IAAI,IAAI,OAAO,GAAG,QAAQ,CAAC,QAAO;;IAElC,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,SAAQ;IAC1B,IAAI,GAAG,KAAK,CAAC;IACb,QAAQ,IAAI,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,mBAAmB,EAAC;IACvD;IACA,QAAQ,IAAI,aAAa,GAAG,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAE;IACvD,QAAQ,IAAI,WAAW,GAAG,uBAAsB;;IAEhD,QAAQ,IAAI,WAAW,GAAG,GAAE;IAC5B,QAAQ,GAAG,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAC3C,YAAY,WAAW,GAAG,aAAa,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,EAAC;IAC7D;IACA,SAAS;;IAET,QAAQ,IAAI,QAAQ,GAAG,KAAI;IAC3B,QAAQ,IAAI,QAAQ,GAAG,KAAI;IAC3B,QAAQ,IAAI,QAAQ,GAAG,aAAa,CAAC,KAAK,CAAC,cAAc,EAAC;IAC1D,QAAQ,IAAI,QAAQ,IAAI,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE;IAC5C,YAAY,EAAE,QAAQ,CAAC,QAAQ,CAAC,GAAG,SAAQ;IAC3C,SAAS;;IAET,QAAQ,OAAO;IACf,YAAY,OAAO,EAAE,KAAK;IAC1B,YAAY,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,QAAQ,CAAC;IACxC,YAAY,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,QAAQ,CAAC;IACxC,YAAY,SAAS;IACrB,YAAY,OAAO;IACnB,YAAY,WAAW;IACvB,SAAS;IACT;IACA,KAAK;IACL;IACA,EAAC;;AAED,qBAAe;IACf,IAAI,IAAI,EAAE,CAAC,EAAE,KAAK;IAClB,QAAQ,IAAI,aAAa,GAAG,MAAM,CAAC,QAAO;IAC1C,QAAQ,MAAM,CAAC,OAAO,GAAG,SAAS,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE;IACzE;IACA,YAAY,IAAI,SAAS,GAAG,WAAW,CAAC,KAAK,EAAC;IAC9C,YAAY,SAAS,CAAC,QAAQ,GAAG,QAAO;IACxC,YAAY,SAAS,CAAC,OAAO,GAAG,OAAM;IACtC,YAAY,SAAS,CAAC,OAAO,GAAG,OAAM;IACtC,YAAY,SAAS,CAAC,MAAM,GAAG,MAAK;;IAEpC,YAAY,EAAE,CAAC,SAAS,EAAC;;IAEzB,YAAY,SAAS,CAAC,IAAI,GAAG,QAAO;IACpC,YAAY,aAAa,IAAI,aAAa,CAAC,KAAK,CAAC,MAAM,EAAE,SAAS,EAAC;IACnE;IACA,UAAS;IACT,KAAK;IACL;;IC3DA;AACA,AACA;IACA;IACA;IACA;IACA,UAAU,CAAC,IAAI,CAAC,CAAC,SAAS,GAAG;IAC7B,IAAI,OAAO,CAAC,GAAG,CAAC,SAAS,EAAC;IAC1B,CAAC,EAAC;;IAEF,OAAO,CAAC,GAAG,CAAC,YAAY;;;;"}