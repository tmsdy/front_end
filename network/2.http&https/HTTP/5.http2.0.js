/*

http2.0的核心部分是SPDY协议,SPDY的目标解决http1.x延迟和安全性的痛点

二进制协议
HTTP/1.1 版的头信息肯定是文本（ASCII编码），数据体可以是文本，也可以是二进制。
HTTP/2 则是一个彻底的二进制协议，头信息和数据体都是二进制，并且统称为"帧"（frame）：头信息帧和数据帧。
二进制协议的一个好处是，可以定义额外的帧。HTTP/2 定义了近十种帧，为将来的高级应用打好了基础。
如果使用文本实现这种功能，解析数据将会变得非常麻烦，二进制解析则方便得多。

特点：
1.多路复用
	多个请求流共享一个tcp连接，降低了延迟同时提高了带宽的利用率,避免了队头堵塞，客户端和浏览器
	都可以同时发送多个请求或回应，服务器处理好的部分就直接返回

2.数据流
	1.数据流：每个请求或回应的所有数据包，标记ID区分。客户端发出的数据流：ID一律为奇数 ；服务器发出的：ID为偶数。

	2.数据流发送到一半的时候，客户端和服务器都可以发送信号（RST_STREAM帧），取消这个数据流。
		http1.1：取消数据流的唯一方法，就是关闭TCP连接。
		http2.0：可以取消某一次请求，同时保证TCP连接还打开着，可以被其他请求使用。

	3.客户端还可以指定数据流的优先级。保证关键的请求(首页的html内容)优先得到响应

3.头部压缩
    1.http1.x的header(cookie和user agent很容易让header的size增至1kb以上,而且是重复的)，
    	由于http的无状态特性，header必须每次request都重复携带，很浪费流量
    2.客户端和服务器同时维护一张头信息表，所有字段都会存入这个表，生成一个索引号，以后只发送索引号，这样提高速度

4.二进制分帧（在应用层跟传输层之间增加了一个二进制分帧层，改进传输性能，实现低延迟和高吞吐量）

5.server push
	常见场景是客户端请求一个网页，这个网页里面包含很多静态资源。服务器可以预期到客户端请求网页后，
	很可能会再请求静态资源，所以就主动把这些静态资源随着网页一起发给客户端了。

*/