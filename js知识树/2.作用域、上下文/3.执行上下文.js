/*

1.执行上下文周期：创建 -> 压入栈顶 ->初始化

2.每个执行上下文都有三个重要属性
变量对象(VO) & 作用域链 & this

3.函数上下文：分为进入执行上下文 & 代码执行 & 上下文弹出栈
 1）复制函数 [[scope]] 属性创建作用域链（闭包的真正原理）
 2) arguments初始化活动对象AO（进入当前上下文VO激活成AO）：
    加入形参：初始化形参，有值赋值，没有就是undefined
    函数声明：像这种 c: reference to function c(){},
    变量声明：像这种 a: undefined    
 3) 变量赋值：将初始化的活动对象AO进行赋值。 
 4) 将活动对象AO压入Scope作用域链顶端。

4.可执行代码：全局代码、函数代码、eval代码。

 */