/*

1.JS内存空间分为栈(stack)、堆(heap)
  栈：存变量
  堆：存复杂对象（闭包中的变量是存这里的）

*2.js自动垃圾收集机制 - 标记清除法
垃圾收集器会每隔一段时间就会回收垃圾释放内存
运行的时候：先把所有变量都加上标记，再从根结点开始找引用的对象，然后去掉环境中的变量及被环境中的变量引用的变量的标记，然后还有标记的变量将会被删除来回收内存(环境中的变量访问不到了)。
* 闭包中引用的变量不会被回收

局部变量：函数执行完毕局部变量便没啥用了，因此垃圾收集器很容易做出判断并回收。
全局变量：全局变量什么时候需要自动释放内存空间则很难判断，所以在开发中尽量避免使用全局变量。

3.V8引擎中所有的JS对象都是通过堆来进行内存分配的，V8对堆内存中的JS对象进行分代管理
新生代：存活周期较短的JS对象，如临时变量、字符串等。
老生代：经过多次垃圾回收仍然存活，存活周期较长的对象，如主控制器、服务器对象等。


 */