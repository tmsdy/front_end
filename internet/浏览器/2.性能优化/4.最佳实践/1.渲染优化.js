/*

1.DOM 元素离线更新：当对 DOM 进行相关操作时，例、appendChild 等都可以使用 Document Fragment 对象进行离线操作，
    带元素“组装”完成后再一次插入页面，或者使用 display:none 对元素隐藏，在元素“消失”后进行相关操作。

2.将没用的元素设为不可见：visibility: hidden，这样可以减小重绘的压力，必要的时候再将元素显示。

3.压缩 DOM 的深度，一个渲染层内不要有过深的子元素，少用 DOM 完成页面样式，多使用伪元素或者 box-shadow 取代。

4.图片在渲染前指定大小：因为 img 元素是内联元素，所以在加载图片后会改变宽高，严重的情况会导致整个页面重排，
    所以最好在渲染前就指定其大小，或者让其脱离文档流。

5.对页面中可能发生大量重排重绘的元素单独触发渲染层，使用 GPU 分担 CPU 压力。(通常我们会对动画元素采取硬件加速)

6.但当我们试图通过 JavaScript 获取某个节点的尺寸信息的时候，为了获得当前真实的信息,
    浏览器会立刻进行一次重排

7.我们希望在每一帧刚开始的时候对页面进行更改，目前只有使用 requestAnimationFrame 能够保证这一点

8.使用 transform 和 opacity 来完成动画，不需要经历 layout 和 paint 过程

*/